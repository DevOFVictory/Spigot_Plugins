package de.devofvictory.survivalproject.inventorys;

// Package declatation here!

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import de.devofvictory.survivalproject.listeners.TeleporterLogic;
import de.devofvictory.survivalproject.main.Main;
import de.devofvictory.survivalproject.utils.TeleporterUtils;

public class INV_ChooseColor implements Listener {

	/*
	 * 
	 * Code generated by McGUI-Creator
	 * 
	 * @author: DevOFVictory
	 * 
	 * » Remember to register this Class as listener in the onEnable() method!
	 * 
	 */

	static String invName = "§6Farbe auswählen";
	static int lines = 2;
	static ArrayList<ItemStack> items = new ArrayList<>();

	public static void callInv(Player p) {

		items.add(getItemStack(Material.YELLOW_WOOL, 1, "§eGelb"));
		items.add(getItemStack(Material.ORANGE_WOOL, 1, "§6Orange"));
		items.add(getItemStack(Material.RED_WOOL, 1, "§4Rot"));
		items.add(getItemStack(Material.LIME_WOOL, 1, "§aHellgrün"));
		items.add(getItemStack(Material.GREEN_WOOL, 1, "§2Dunkelgrün"));
		items.add(getItemStack(Material.LIGHT_BLUE_WOOL, 1, "§bHellblau"));
		items.add(getItemStack(Material.CYAN_WOOL, 1, "§3Turkis"));
		items.add(getItemStack(Material.BLUE_WOOL, 1, "§1Dunkelblau"));
		items.add(getItemStack(Material.PINK_WOOL, 1, "§dPink"));
		items.add(getItemStack(Material.PURPLE_WOOL, 1, "§5Lila"));
		items.add(getItemStack(Material.LIGHT_GRAY_WOOL, 1, "§7Hellgrau"));
		items.add(getItemStack(Material.GRAY_WOOL, 1, "§8Dunkelgrau"));
		items.add(getItemStack(Material.BLACK_WOOL, 1, "§0Schwarz"));
		
		items.add(null);
		items.add(null);
		items.add(null);
		items.add(null);
		items.add(getItemStack(Material.WHITE_WOOL, 1, "§c§lDeaktivieren"));

		Inventory inv = Bukkit.createInventory(null, lines * 9, invName);

		for (int i = 0; i < lines * 9; i++) {

			try {

				ItemStack item = new ItemStack(items.get(i).getType(), items.get(i).getAmount());
				ItemMeta itemMeta = item.getItemMeta();
				itemMeta.setDisplayName(items.get(i).getItemMeta().getDisplayName());
				item.setItemMeta(itemMeta);
				inv.setItem(i, item);

			} catch (NullPointerException ex) {
				inv.setItem(i, null);
			}

		}

		p.openInventory(inv);
	}

	@EventHandler
	public void onInvClick(InventoryClickEvent e) {
		if (e.getWhoClicked() instanceof Player) {
			Player p = (Player) e.getWhoClicked();

			try {

				if (e.getView().getTitle().equalsIgnoreCase(invName)) {

					e.setCancelled(true);

					if (items.contains(e.getCurrentItem())) {

						String clickedItem = e.getCurrentItem().getItemMeta().getDisplayName();

						if (TeleporterLogic.changeColorMap.containsKey(p)) {
							
							if (e.getCurrentItem().getType() == Material.WHITE_WOOL) {
								p.sendMessage(Main.Prefix+"§aTeleporter erfolgreich §c§ldeaktiviert§a!");
								TeleporterLogic.changeColorMap.get(p).getBlock().setType(e.getCurrentItem().getType());
								
								p.playSound(p.getLocation(), Sound.ENTITY_PLAYER_LEVELUP, 1, 1);

								
								TeleporterUtils.getTeleporter(TeleporterLogic.changeColorMap.get(p))
								.setColor(TeleporterUtils.getColorString(e.getCurrentItem().getType()));
								
								TeleporterUtils.allTeleporters.put(TeleporterUtils.getTeleporter(TeleporterLogic.changeColorMap.get(p)), TeleporterUtils.getColorString(Material.WHITE_WOOL));
								
								
								p.closeInventory();
								
								return;
							}

							if (TeleporterUtils
									.getTeleportersInColor(TeleporterUtils.getColorString(e.getCurrentItem().getType()))
									.size() < 2) {
								TeleporterLogic.changeColorMap.get(p).getBlock().setType(e.getCurrentItem().getType());
								TeleporterUtils.getTeleporter(TeleporterLogic.changeColorMap.get(p))
										.setColor(TeleporterUtils.getColorString(e.getCurrentItem().getType()));
								p.sendMessage(Main.Prefix + "§aTeleporter-Farbe erfolgreich zu " + clickedItem
										+ " §ageändert!");
								
								TeleporterUtils.getTeleporter(TeleporterLogic.changeColorMap.get(p)).setArrivalLocation(p.getLocation());
								
								p.playSound(p.getLocation(), Sound.ENTITY_PLAYER_LEVELUP, 1, 1);

								p.closeInventory();

							} else {
								p.sendMessage(Main.Prefix + "§cEs existieren bereits zwei Teleporter mit der Farbe "
										+ clickedItem + "§c!");
								p.playSound(p.getLocation(), Sound.BLOCK_ANVIL_USE, 10, 10);
								p.closeInventory();

							}
						}

					}

				}
			} catch (NullPointerException ex) {
			}

		}
	}

	public static ItemStack getItemStack(Material type, int amount, String displayName) {

		ItemStack is = new ItemStack(type, amount);
		ItemMeta isMeta = is.getItemMeta();
		isMeta.setDisplayName(displayName);

		is.setItemMeta(isMeta);

		return is;

	}

}
