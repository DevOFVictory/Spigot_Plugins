package de.devofvictory.biomicploz.inventorys;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import de.devofvictory.biomicploz.main.Main;
import de.devofvictory.biomicploz.utils.Plot;
import de.devofvictory.biomicploz.utils.PlotManager;
import de.devofvictory.biomicploz.utils.Utils;

public class INV_PlotSettings implements Listener{
	
	/*
	 * 
	 * Code generated by McGUI-Creator
	 * 	
	 * @author: DevOFVictory
	 * 
	 * » Remember to register this Class as listener in the onEnable() method!
	 * 
	 */
	
	static String invName = "§e§lEinstellungen §8ID: ";
	static int lines = 5;
	static ArrayList<ItemStack> items;
	
	public static void callInv(Player p, int id) {
		
String explosionsCode = PlotManager.getBoolColorCode(id, "explosions");
String useCode = PlotManager.getBoolColorCode(id, "use");
String pvpCode = PlotManager.getBoolColorCode(id, "pvp");
String pveCode = PlotManager.getBoolColorCode(id, "pve");

List<String> trusted = Utils.getNamesList(PlotManager.getPlot(id).getTrusted());
List<String> denied = Utils.getNamesList(PlotManager.getPlot(id).getTrusted());
items = new ArrayList<>();
	
items.add(getItemStack(Material.REDSTONE_COMPARATOR, (byte)0, 1, "§4§lFlags", (List<String>) Arrays.asList("§f----------------------")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.SKULL_ITEM, (byte)3, 1, "§4§lSpielermanagement", (List<String>) Arrays.asList("§f----------------------")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.TNT, (byte)0, 1, explosionsCode+"Explosionen", (List<String>) Arrays.asList("§fDürfen Dinge explodieren?")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.DIAMOND, (byte)0, 1, "§2Beste Freunde", trusted));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)6, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)7, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)7, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)6, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STONE_BUTTON, (byte)0, 1, useCode+"Benutzung", (List<String>) Arrays.asList("§fDürfen fremde Spieler deine Blöcke benutzen?")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.GOLD_INGOT, (byte)0, 1, "§aFreunde", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.WOOD_DOOR, (byte)0, 1, "§6Home setzten", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.SAPLING, (byte)0, 1, "§6Biom setzten", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.GHAST_TEAR, (byte)0, 1, "§6Wetter setzten", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.BARRIER, (byte)0, 1, "§6Comming soon...", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.DIAMOND_SWORD, (byte)0, 1, pvpCode+"PvP", (List<String>) Arrays.asList("§fDürfen Spieler geschlagen werden?")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.IRON_INGOT, (byte)0, 1, "§eHelfer", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)6, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)7, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)7, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)6, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.WOOD_SWORD, (byte)0, 1, pveCode+"PvE", (List<String>) Arrays.asList("§fDürfen Tiere geschalgen werden?")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.COAL, (byte)0, 1, "§4Gebannt", denied));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));
items.add(getItemStack(Material.STAINED_GLASS_PANE, (byte)15, 1, "§r", (List<String>) Arrays.asList("")));

		
		Inventory inv = Bukkit.createInventory(null, lines*9, invName+id);
		
		for (int i = 0; i<lines*9; i++) {
			
			try {
			
			@SuppressWarnings("deprecation")
			ItemStack item = new ItemStack(items.get(i).getType(), items.get(i).getAmount(), items.get(i).getData().getData());
			ItemMeta itemMeta = item.getItemMeta();
			itemMeta.setDisplayName(items.get(i).getItemMeta().getDisplayName());
			itemMeta.setLore(items.get(i).getItemMeta().getLore());
			item.setItemMeta(itemMeta);
			inv.setItem(i, item);
			
			}catch (NullPointerException ex) {
				inv.setItem(i, null);
			}
			
		}
		
		p.openInventory(inv);
	}
	
	
	@EventHandler
	public void onInvClick(InventoryClickEvent e) {
		if (e.getWhoClicked() instanceof Player) {
			Player p = (Player)e.getWhoClicked();
			
			try {
				if (e.getClickedInventory().getName().startsWith(invName) && e.getClickedInventory().getSize() == 5*9) {
					
					e.setCancelled(true);
						String clickedItem = e.getCurrentItem().getItemMeta().getDisplayName();
						
						
						String invTitle = e.getClickedInventory().getTitle();
						String a = invTitle.split("§e§lEinstellungen §8ID: ")[1];
						int id = Integer.parseInt(a);
						
						Plot plot = PlotManager.getPlot(id);
						
						switch (e.getCurrentItem().getType()) {
						case TNT:
							if (clickedItem.startsWith("§a")) {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("explosions", "false");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§cExplosionen wurden deaktiviert!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§cExplosionen");
								e.getCurrentItem().setItemMeta(meta);
								
							}else {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("explosions", "true");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§aExplosionen wurden aktiviert!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§aExplosionen");
								e.getCurrentItem().setItemMeta(meta);
							}
							break;
						case STONE_BUTTON:
							if (clickedItem.startsWith("§a")) {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("use", "false");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§cInteraktionen wurden verboten!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§cBenutzung");
								e.getCurrentItem().setItemMeta(meta);
								
							}else {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("use", "true");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§aInteraktionen wurden erlaubt!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§aBenutzung");
								e.getCurrentItem().setItemMeta(meta);
							}
							
							
							break;
						case DIAMOND_SWORD:
							if (clickedItem.startsWith("§a")) {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("pvp", "false");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§cPvP wurde deaktiviert!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§cPvP");
								e.getCurrentItem().setItemMeta(meta);
								
							}else {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("pvp", "true");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§aPvP wurde aktiviert!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§aPvP");
								e.getCurrentItem().setItemMeta(meta);
							}
							
							break;
						case WOOD_SWORD:
							if (clickedItem.startsWith("§a")) {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("pve", "false");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§cPvE wurde deaktiviert!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§cPvE");
								e.getCurrentItem().setItemMeta(meta);
								
							}else {
								for (Plot gs : plot.getPlotsForSameChange()) {
									gs.addFlag("pve", "true");
								}
								Utils.sendNoSpamMsg(p, Main.Prefix+"§aPvE wurde aktiviert!");
								ItemMeta meta = e.getCurrentItem().getItemMeta();
								meta.setDisplayName("§aPvE");
								e.getCurrentItem().setItemMeta(meta);
							}
							break;
						case WOOD_DOOR:
							
							if (plot.isLocOnPlot(p.getLocation())) {
								
								plot.setHome(p.getLocation());
								Utils.sendNoSpamMsg(p, Main.Prefix+"§aDer Home-Punkt vom Grundstück wurde auf deine Position gesetzt!");
								p.playSound(p.getLocation(), Sound.LEVEL_UP, 10, 10);
								p.closeInventory();
							}else {
								Utils.sendNoSpamMsg(p, Main.Prefix+"§cDu stehst nicht auf dem ausgewähltem Grundstück!");
								p.playSound(p.getLocation(), Sound.ITEM_BREAK, 1, 1);
								p.closeInventory();
							}
							
							break;
						default:
							break;
						}
					
					
				}
			}catch (NullPointerException ex) {
				
			}
			
		}
	}
	
	public static ItemStack getItemStack(Material type, byte meta, int amount, String displayName, List<String> lore) {
		
		ItemStack is = new ItemStack(type, amount, meta);
		ItemMeta isMeta = is.getItemMeta();
		isMeta.setDisplayName(displayName);
		isMeta.setLore(lore);
		
		is.setItemMeta(isMeta);
		
		return is;
		
	}

}
